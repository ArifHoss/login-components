version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: login-postgres
    restart: unless-stopped
    env_file:
      - environment.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - login-network

  backend:
    build:
      context: ./.idea/login-rest-api
      dockerfile: Dockerfile
    container_name: login-backend
    restart: unless-stopped
    env_file:
      - environment.env
    ports:
      - "${SERVER_PORT:-8080}:8080"
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SPRING_JPA_SHOW_SQL: ${SPRING_JPA_SHOW_SQL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
    depends_on:
      - postgres
    networks:
      - login-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: login-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - login-network

volumes:
  postgres_data:

networks:
  login-network:
    driver: bridge
