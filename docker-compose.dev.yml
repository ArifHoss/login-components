version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: login-postgres-dev
    restart: unless-stopped
    env_file:
      - environment.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - login-network-dev

  # Backend with volume mount for hot reload
  backend:
    build:
      context: ./.idea/login-rest-api
      dockerfile: Dockerfile.dev
    container_name: login-backend-dev
    restart: unless-stopped
    env_file:
      - environment.env
    ports:
      - "${SERVER_PORT:-8080}:8080"
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SPRING_JPA_SHOW_SQL: ${SPRING_JPA_SHOW_SQL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
    volumes:
      - ./.idea/login-rest-api/src:/app/src
      - ./.idea/login-rest-api/target:/app/target
    depends_on:
      - postgres
    networks:
      - login-network-dev

  # Frontend with volume mount for hot reload
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: login-frontend-dev
    restart: unless-stopped
    ports:
      - "5173:5173"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/package.json:/app/package.json
      - ./frontend/vite.config.js:/app/vite.config.js
    networks:
      - login-network-dev

volumes:
  postgres_data_dev:

networks:
  login-network-dev:
    driver: bridge
